apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: monitoring
      version: "44.3.1"
  interval: 1h0m0s
  install:
    crds: Create
  upgrade:
    crds: CreateReplace
  values:
    kubeApiServer:
      enabled: false
    kubelet:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
    grafana:
      enabled: true
      admin:
        existingSecret: grafana-creds
      ingress:
        annotations:
          cert-manager.io/cluster-issuer: default-clusterissuer
        enabled: true
        hosts:
        - grafana.cosmos.cboxlab.com
        tls:
        - secretName: grafana-cert
          hosts:
          - grafana.cosmos.cboxlab.com
      alertmanager:
        enabled: false
      sidecar:
        datasources:
          url: http://thanos-query:9090/
    defaultRules:
      create: true
      rules:
        alertmanager: true
        etcd: false
        configReloaders: true
        general: true
        k8s: true
        kubeApiserverAvailability: true
        kubeApiserverBurnrate: true
        kubeApiserverHistogram: true
        kubeApiserverSlos: true
        kubeControllerManager: false
        kubelet: false
        kubeProxy: false
        kubePrometheusGeneral: true
        kubePrometheusNodeRecording: true
        kubernetesApps: true
        kubernetesResources: true
        kubernetesStorage: true
        kubernetesSystem: false
        kubeSchedulerAlerting: false
        kubeSchedulerRecording: false
        kubeStateMetrics: true
        network: true
        node: true
        nodeExporterAlerting: true
        nodeExporterRecording: true
        prometheus: true
        prometheusOperator: true

    additionalPrometheusRulesMap:
      flux:
        groups:
        - name: flux
          rules:
          - alert: ReconciliationFailure
            expr: max(gotk_reconcile_condition{status="False",type="Ready"}) by (exported_namespace, name, kind) + on(exported_namespace, name, kind) (max(gotk_reconcile_condition{status="Deleted"}) by (exported_namespace, name, kind)) * 2 == 1
            for: 10m
            labels:
              severity: warning
            annotations:
              summary: '{{ $labels.kind }} {{ $labels.exported_namespace }}/{{ $labels.name }} reconciliation has been failing for more than ten minutes.'

    prometheus:
      enabled: true
      thanosService:
        enabled: true
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: default-clusterissuer
        hosts:
        - prometheus.cosmos.cboxlab.com
        tls:
        - secretName: prometheus-cert
          hosts:
          - prometheus.cosmos.cboxlab.com
      prometheusSpec:
        # Allow monitoring from all namespaces
        ruleSelectorNilUsesHelmValues: false
        ruleSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        retention: 3h
        resources:
          limits:
            memory: 700Mi
            cpu: 1
          requests:
            memory: 400Mi
            cpu: 1m
        storageSpec:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 5Gi
        thanos:
          objectStorageConfig:
            name: thanos-s3
            key: objstore.yml

        additionalScrapeConfigs:
        - job_name: jd-pc
          static_configs:
          - targets:
            - 100.108.88.96:9100 ## Node exporter from jd-pc
            - 100.108.88.96:18080 ## taskwarrior metrics from jd-pc
        # Postgres node
        - job_name: helios
          static_configs:
          - targets:
            - 192.168.1.77:9100 ## Node exporter
            - 192.168.1.77:9187 ## Postgres exporter

        # Docker hosts in truenas
        - job_name: truenas
          static_configs:
          - targets:
            - traefik.cosmos.cboxlab.com:8899 # traefik

      additionalPodMonitors:
      - name: flux-system
        namespaceSelector:
          matchNames:
            - flux-system
        selector:
          matchExpressions:
            - key: app
              operator: In
              values:
                - helm-controller
                - source-controller
                - kustomize-controller
                - notification-controller
                - image-automation-controller
                - image-reflector-controller
        podMetricsEndpoints:
          - port: http-prom
            relabelings:
              # https://github.com/prometheus-operator/prometheus-operator/issues/4816
              - sourceLabels: [__meta_kubernetes_pod_phase]
                action: keep
                regex: Running

      additionalServiceMonitors:
      - name: restic-exporter
        selector:
          matchLabels:
            app.kubernetes.io/name: restic-exporter
        namespaceSelector:
          matchNames:
          - monitoring
        endpoints:
        - port: http-metrics
          interval: 30s

    alertmanager:
      enabled: true
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: default-clusterissuer
        hosts:
        - alertmanager.cosmos.cboxlab.com
        tls:
        - secretName: alertmanager-cert
          hosts:
          - alertmanager.cosmos.cboxlab.com
      alertmanagerSpec:
        useExistingSecret: true
        configSecret: alertmanager-config
        storageSpec:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 5Gi
    kube-state-metrics:
      rbac:
        extraRules:
        - apiGroups: ["monitoring.coreos.com"]
          resources: ["prometheuses"]
          verbs: ["list", "watch"]
      collectors:
      - certificatesigningrequests
      - configmaps
      - cronjobs
      - daemonsets
      - deployments
      - endpoints
      - horizontalpodautoscalers
      - ingresses
      - jobs
      - leases
      - limitranges
      - mutatingwebhookconfigurations
      - namespaces
      - networkpolicies
      - nodes
      - persistentvolumeclaims
      - persistentvolumes
      - poddisruptionbudgets
      - pods
      - replicasets
      - replicationcontrollers
      - resourcequotas
      - secrets
      - services
      - statefulsets
      - storageclasses
      - validatingwebhookconfigurations
      - volumeattachments
      - prometheuses
      extraArgs:
      - --custom-resource-state-config
      -  |
          spec:
            resources:
              - groupVersionKind:
                  group: monitoring.coreos.com
                  version: "v1"
                  kind: Prometheus
                metrics:
                  - name: unavailable_replicas
                    help: "Count of unavailable replicas"
                    each:
                      type: Gauge
                      gauge:
                        path: [status, unavailableReplicas]
