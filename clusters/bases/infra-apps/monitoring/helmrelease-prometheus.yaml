apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      version: "44.3.1"
  interval: 1h0m0s
  install:
    crds: Create
  upgrade:
    crds: CreateReplace
  values:
    kubeApiServer:
      enabled: false
    kubelet:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
    grafana:
      admin:
        existingSecret: grafana-creds
      ingress:
        annotations:
          cert-manager.io/cluster-issuer: ca-issuer
        enabled: true
        hosts: [] # Declare in env specific file
    defaultRules:
      create: true
      rules:
        alertmanager: true
        etcd: false
        configReloaders: true
        general: true
        k8s: true
        kubeApiserverAvailability: true
        kubeApiserverBurnrate: true
        kubeApiserverHistogram: true
        kubeApiserverSlos: true
        kubeControllerManager: false
        kubelet: false
        kubeProxy: false
        kubePrometheusGeneral: true
        kubePrometheusNodeRecording: true
        kubernetesApps: true
        kubernetesResources: true
        kubernetesStorage: true
        kubernetesSystem: true
        kubeSchedulerAlerting: false
        kubeSchedulerRecording: false
        kubeStateMetrics: true
        network: true
        node: true
        nodeExporterAlerting: true
        nodeExporterRecording: true
        prometheus: true
        prometheusOperator: true
    prometheus:
      enabled: true
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: ca-issuer
      prometheusSpec:
        resources:
          limits:
            memory: 400Mi
            cpu: 1
          requests:
            memory: 400Mi
            cpu: 1m
        storageSpec:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 5Gi
    alertmanager:
      enabled: true
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: ca-issuer
      alertmanagerSpec:
        storageSpec:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 5Gi
    kube-state-metrics:
      rbac:
        extraRules:
        - apiGroups: ["monitoring.coreos.com"]
          resources: ["prometheuses"]
          verbs: ["list", "watch"]
      extraArgs:
      - --custom-resource-state-config
      -  |
          spec:
            resources:
              - groupVersionKind:
                  group: monitoring.coreos.com
                  version: "v1"
                  kind: Prometheus
                metrics:
                  - name: unavailable_replicas
                    help: "Count of unavailable replicas"
                    each:
                      type: Gauge
                      gauge:
                        path: [status, unavailableReplicas]
