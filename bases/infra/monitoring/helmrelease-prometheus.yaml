apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: monitoring
      version: "44.3.1"
  interval: 1h0m0s
  install:
    crds: Create
  upgrade:
    crds: CreateReplace
  values:
    kubeApiServer:
      enabled: false
    kubelet:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
    grafana:
      admin:
        existingSecret: grafana-creds
      ingress:
        annotations:
          cert-manager.io/cluster-issuer: default-clusterissuer
        enabled: true
        hosts: [] # Declare in env specific file
    defaultRules:
      create: true
      rules:
        alertmanager: true
        etcd: false
        configReloaders: true
        general: true
        k8s: true
        kubeApiserverAvailability: true
        kubeApiserverBurnrate: true
        kubeApiserverHistogram: true
        kubeApiserverSlos: true
        kubeControllerManager: false
        kubelet: false
        kubeProxy: false
        kubePrometheusGeneral: true
        kubePrometheusNodeRecording: true
        kubernetesApps: true
        kubernetesResources: true
        kubernetesStorage: true
        kubernetesSystem: false
        kubeSchedulerAlerting: false
        kubeSchedulerRecording: false
        kubeStateMetrics: true
        network: true
        node: true
        nodeExporterAlerting: true
        nodeExporterRecording: true
        prometheus: true
        prometheusOperator: true
    prometheus:
      enabled: true
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: default-clusterissuer
      prometheusSpec:
        # Allow monitoring from all namespaces
        ruleSelector: {}
        serviceMonitorSelector: {}
        resources:
          limits:
            memory: 400Mi
            cpu: 1
          requests:
            memory: 400Mi
            cpu: 1m
        storageSpec:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 5Gi
      additionalPodMonitors:
      - name: flux-system
        namespaceSelector:
          matchNames:
            - flux-system
        selector:
          matchExpressions:
            - key: app
              operator: In
              values:
                - helm-controller
                - source-controller
                - kustomize-controller
                - notification-controller
                - image-automation-controller
                - image-reflector-controller
        podMetricsEndpoints:
          - port: http-prom
            relabelings:
              # https://github.com/prometheus-operator/prometheus-operator/issues/4816
              - sourceLabels: [__meta_kubernetes_pod_phase]
                action: keep
                regex: Running
    alertmanager:
      enabled: true
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: default-clusterissuer
      alertmanagerSpec:
        storageSpec:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 5Gi
    kube-state-metrics:
      rbac:
        extraRules:
        - apiGroups: ["monitoring.coreos.com"]
          resources: ["prometheuses"]
          verbs: ["list", "watch"]
      collectors:
      - certificatesigningrequests
      - configmaps
      - cronjobs
      - daemonsets
      - deployments
      - endpoints
      - horizontalpodautoscalers
      - ingresses
      - jobs
      - leases
      - limitranges
      - mutatingwebhookconfigurations
      - namespaces
      - networkpolicies
      - nodes
      - persistentvolumeclaims
      - persistentvolumes
      - poddisruptionbudgets
      - pods
      - replicasets
      - replicationcontrollers
      - resourcequotas
      - secrets
      - services
      - statefulsets
      - storageclasses
      - validatingwebhookconfigurations
      - volumeattachments
      - prometheuses
      extraArgs:
      - --custom-resource-state-config
      -  |
          spec:
            resources:
              - groupVersionKind:
                  group: monitoring.coreos.com
                  version: "v1"
                  kind: Prometheus
                metrics:
                  - name: unavailable_replicas
                    help: "Count of unavailable replicas"
                    each:
                      type: Gauge
                      gauge:
                        path: [status, unavailableReplicas]
