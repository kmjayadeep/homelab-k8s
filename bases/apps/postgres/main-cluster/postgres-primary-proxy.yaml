# A proxy to postgresql-primary service
# Listens to 5432 on tailscale client container
# and forwards incoming connections to main:5432
# This allows other clients in the tailscale network to connect to postgresql using this hostname
# hostname: postgresql-primary
apiVersion: v1
data:
  LISTEN: ":5432"
  TALK: "main:5432"
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: proxy-config
  labels:
    app.kubernetes.io/name: primary-proxy
    app.kubernetes.io/instance: primary-proxy
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tailscale
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["secrets"]
  # Create can not be restricted to a resource name.
  verbs: ["create"]
- apiGroups: [""] # "" indicates the core API group
  resourceNames: ["tailscale-state"]
  resources: ["secrets"]
  verbs: ["get", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tailscale
subjects:
- kind: ServiceAccount
  name: "postgres-primary-proxy"
roleRef:
  kind: Role
  name: tailscale
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: postgres-primary-proxy
  labels:
    app.kubernetes.io/name: primary-proxy
    app.kubernetes.io/instance: primary-proxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: primary-proxy
    app.kubernetes.io/name: primary-proxy
  name: postgres-primary-proxy
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: primary-proxy
      app.kubernetes.io/name: primary-proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: primary-proxy
        app.kubernetes.io/name: primary-proxy
    spec:
      serviceAccountName: postgres-primary-proxy
      initContainers:
      - name: init
        image: busybox:1.32.0
        command:
        - sh
        - -c
        - sysctl -w net.ipv4.ip_forward=1 && sysctl -w net.ipv4.conf.all.forwarding=1
        securityContext:
          privileged: true
          capabilities:
            add:
            - NET_ADMIN
      containers:
      - name: tailscale
        image: ghcr.io/tailscale/tailscale:v1.52
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
        env:
        - name: POD_NAME
          valueFrom:
             fieldRef:
               fieldPath: metadata.name
        # For storing the state
        - name: TS_KUBE_SECRET
          value: tailscale-state
        - name: TS_AUTH_ONCE
          value: "true"
        # No need of dns here
        # As the entire traffic is forwarded to main:5432 through CNI
        - name: TS_ACCEPT_DNS
          value: "false"
        - name: TS_USERSPACE
          value: "false"
        - name: TS_AUTHKEY
          valueFrom:
            secretKeyRef:
              name: tailscale-auth
              key: TS_AUTHKEY
        - name: TS_EXTRA_ARGS
          value: "--login-server https://headscale.milkyway.cboxlab.com --hostname=postgresql-primary"
      - image: tecnativa/tcp-proxy:v1.0.1
        name: tcp-proxy
        envFrom:
        - configMapRef:
            name: proxy-config
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    app.kubernetes.io/instance: primary-proxy
    app.kubernetes.io/name: primary-proxy
    app.kubernetes.io/service: primary-proxy
  name: postgresql-primary
spec:
  ports:
  - name: postgresql
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app.kubernetes.io/instance: primary-proxy
    app.kubernetes.io/name: primary-proxy
  type: ClusterIP
---
