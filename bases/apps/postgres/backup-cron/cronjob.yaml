---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backup-sa
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup
spec:
  concurrencyPolicy: Forbid
  schedule: "0 0 * * *"
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          initContainers:
          - name: pg-dump-init
            image: postgres:16beta2-alpine3.18
            command: ["/bin/sh"]
            args: ["-c", "sh /scripts/pg_dump.sh"]
            env:
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: postgres.main.credentials.postgresql.acid.zalan.do
                  key: username
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres.main.credentials.postgresql.acid.zalan.do
                  key: password
            - name: DATABASES
              value: "planka,totp"
            - name: PGHOST
              value: "main"
            - name: PGPORT
              value: "5432"
            volumeMounts:
            - name: backup-volume
              mountPath: /backup
            - name: script-volume
              mountPath: "/scripts"
              readOnly: true
          containers:
          - name: backup
            image: restic/restic:0.16.0
            env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: restic-creds
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: restic-creds
                  key: AWS_SECRET_ACCESS_KEY
            - name: RESTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: restic-creds
                  key: RESTIC_PASSWORD
            - name: RESTIC_REPOSITORY
              valueFrom:
                secretKeyRef:
                  name: restic-creds
                  key: RESTIC_REPOSITORY
            command: ["/bin/sh"]
            args: ["-c", "sh /scripts/backup.sh"]
            volumeMounts:
            - name: script-volume
              mountPath: "/scripts"
              readOnly: true
            - name: backup-volume
              mountPath: /backup
          restartPolicy: OnFailure
          volumes:
          - name: backup-volume
            emptyDir: {}
          - name: script-volume
            configMap:
              name: backup-script
