apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: totp
    app.kubernetes.io/name: totp
  name: totp
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: totp
      app.kubernetes.io/name: totp
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: totp
        app.kubernetes.io/name: totp
    spec:
      containers:
      - image: kmjayadeep/2fauth:4.1.0-psql-0.2
        imagePullPolicy: IfNotPresent
        name: 2fauth
        # env: https://docs.2fauth.app/getting-started/installation/docker/docker-compose/
        env:
        - name: APP_NAME
          valueFrom:
            configMapKeyRef:
              name: totp-cm
              key: APP_NAME
        - name: APP_URL
          valueFrom:
            configMapKeyRef:
              name: totp-cm
              key: APP_URL
        - name: SITE_OWNER
          valueFrom:
            configMapKeyRef:
              name: totp-cm
              key: SITE_OWNER
        - name: WEBAUTHN_NAME
          valueFrom:
            configMapKeyRef:
              name: totp-cm
              key: WEBAUTHN_NAME
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: totp.totp-user.main.credentials.postgresql.acid.zalan.do
              key: username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: totp.totp-user.main.credentials.postgresql.acid.zalan.do
              key: password
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: totp-secret
              key: DB_HOST
        - name: APP_KEY
          valueFrom:
            secretKeyRef:
              name: totp-secret
              key: APP_KEY
        - name: DATABASE_URL
          value: "postgresql://$(DB_USER):$(DB_PASS)@$(DB_HOST):5432/totp"
        - name: APP_DEBUG
          value: "true"
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        volumeMounts:
        - name: storage
          mountPath: /srv/storage
        - name: passport-creds
          mountPath: /srv/storage/oauth-private.key
          subPath: oauth-private.key
        - name: passport-creds
          mountPath: /srv/storage/oauth-public.key
          subPath: oauth-public.key
        # For debugging
        # command: ['/bin/sh']
        # args: ['-c', 'sleep 10d']
      volumes:
      - name: passport-creds
        secret:
          secretName: totp-secret
          items:
          - key: PASSPORT_PRIVATE_KEY
            path: oauth-private.key
          - key: PASSPORT_PUBLIC_KEY
            path: oauth-public.key
      - name: storage
        persistentVolumeClaim:
          claimName: totp-storage
